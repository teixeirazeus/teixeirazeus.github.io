[{"content":"Este é meu primeiro post, onde pretendo explorar um pouco sobre a questão do código limpo. Uma mistura da literatura da computação e minhas reflexões como programador.\nComunicação Vivi grande parte da minha vida em São Paulo capital, tenho o sotaque e até utilizo algumas gírias paulistas. Quando me empolgo, fico parecendo o Boça do Hermes e Renato. Puta minigame da hora, meu!.\nEstava na fase do vestibular e acabei passando no curso de ciência da computação na UTFPR de Ponta Grossa, Paraná. Novos ares, nova cultura e nova linguagem?!\nEm um dos meus primeiros contatos com os pontagrossenses, ouvia frases como “Tinha dois piá ali, descendo a ladeira!”. E eu pensava comigo “Pia? Aquelas de banheiro? Como assim?!”.\nNão cheguei a questionar as pessoas na hora, fui compreendendo o que elas queriam dizer através do contexto. Repare como a mente humana é incrível:\nNo meio de toda uma conversa, ouvi uma frase que não fazia sentido logico. Rapidamente consegui levantar uma suposição que meu interlocutor estava correto, e eu, por estar em outro Estado, devo ter me deparado com uma gíria que ainda não conheço. Um modo de nomear algo diferente da forma que eu utilizo.\nApós continuar ouvindo variadas utilizações da palavra “piá”, finalmente consegui chegar a conclusão que se tratava da palavra “menino”.\nA mensagem foi interpretada mesmo com ruído. Porém, repare como minha mente precisou dar toda uma volta, perder energia para compreender uma simples mensagem. E se minha conclusão estivesse errada? O único modo de saber se seu estava correto, era perguntar ao meu interlocutor o que era o tal “piá”. Não seria melhor utilizar a palavra “menino”?\nIntenção O equivalente em código seria eu não compreender o nome de algo, como uma variável, e ser obrigado a ler todo o código para entender o contexto de aplicação daquele nome.\nComo programadores, temos que escrever código que sejam fáceis de ler e fácil compreensão para todos. Isto inclui seguir um padrão de nomes daquela linguagem que seja amplamente aceita.\nEm python temos que todas a variáveis deve ser em minusculo, separado por underline.\nfull_name = \u0026#34;Fulano da Silva\u0026#34; # correto fullName = \u0026#34;Fulano da Silva\u0026#34; # errado Mas é preciso mais do que isso, temos que escolher bem o nome para ser clara nossa intenção. Qual é o objetivo dessa variável? Para que ela é utilizada? Quem ler vai entender o porquê dela estar ali?\nenable = False i = 0 # index do loop index = 0 # index da lista l = [1,2,3] Enable? Eu estou ativando o que alí?\nIndex do loop? Que loop? Para fazer o que? Para que colocar o comentário? Não é mais fácil já nomear loop_index?\nSe você precisa colocar um comentário ao lado para explicar o nome da variável, é bem provável que você tenha falhado na escolha do nome.\nhas_even_number = False loop_index = 0 numbers_index = 0 numbers = [1, 2, 3] Repare que agora, mesmo não olhando o resto do código, é possível entender como será o programa. Tem dois inteiros, um para um loop e outro para mapear a lista numbers, junto com um boleano que deve ser acionado ao detectar um número par na lista.\nTudo isso sem ler a lógica. Já é possível ter uma boa noção de como essas variáveis serão utilizadas pelo programa.\nPronunciável O código bem escrito possui a mesma fluidez da leitura de um texto bem estruturado. Para isto é necessário escolher nomes pronunciáveis, que possibilitem esse tipo de leitura.\nqty_pokeball = 10 n_pk = 10 QTY pokeball? Não é melhor colocar em extenso quantity?\nn_pk? Deve ser algo como number of pokeball, mas eu só consigo supor isto através do contexto. Poderia ser algo como number of players killed, ou algo assim.\nif wild_pokemon.is_rare and player.has_pokeball: player.throw_pokeball(wild_pokemon) Repare como é possível ler o código como se fosse um texto simples. Se o pokemon selvagem for raro e o jogador tiver pokebolas, o jogador joga uma pokebola no pokemon.\nEsta é umas das razões que eu prefiro sempre utilizar nomes em inglês, pois se trata de uma língua universal e fica muito mais harmônica no código. Já que a maioria dos módulos são escritos em inglês e a própria sintaxe da linguagem de programação é em inglês.\nEncoding Encoding é uma técnica para nomeação de variáveis com tags, normalmente dizendo seu tipo. Hoje, com todas as facilidades de uma interface de desenvolvimento, fica muito mais fácil saber o tipo de cada variável. Deixando o encoding apenas um ruído.\nSaber o tipo de cada variável é muito importante para evitar erros. O programador tem uma maior noção de como manipular aquele pedaço de código.\nNo caso do python, todas as variáveis são dinâmicas. Porém, há um modo de especificar o tipo de variável em funções.\nNo caso a baixo, a função recebe um argumento do tipo Pokemon e retorna um booleano.\ndef is_eletric(pokemon: Pokemon) -\u0026gt; bool: return pokemon.type == \u0026#39;eletric\u0026#39; O interpretador python não irá fazer nenhuma checagem de tipo, esse tipo de notação serve apenas para o programador. Exceto seja explicitamente usando a função isinstance.\nTamanho Qual é o tamanho ideal para nomes? Qual o limite descritivo que ele suporta? A chave está no escopo.\nVariáveis podem ser pequenas se o escopo delas for pequeno.\nfor i in range(10): print(i*\u0026#34;Ha\u0026#34;, end=\u0026#34;!\\n\u0026#34;) Em um caso de um for pequeno, logo ao bater o olho já é possível entender a utilização da variável. Ela está próxima de sua declaração. Então, no final não tem muita importância a escolha de um nome mais longo.\nVariáveis com grande escopo devem ter nomes grandes.\nJá uma variável com um grande escopo, será utilizada por várias partes do programa. Será inserida em vários contextos, varias funções. Logo ela deve ter um bom longo nome, principalmente para uma variável global.\nPara função e métodos, a regra é invertida. Nome pequeno para grandes escopos e grande para pequenos escopos. O mesmo vale para nome de classes.\nFunções publicas verão chamadas por várias partes do programa, então ter um nome pequeno as torna muito mais convenientes.\nFunções privadas são chamadas apenas dentro de sua classe, então ela tem uma folga maior para o tamanho do nome. Normalmente elas que fazem todo o trabalho duro e mais específico para as funções públicas, algo para discutir no próximo post sobre funções.\nConclusão Nomes são uma importante ferramenta para comunicação, que quando utilizados de maneira correta deixam o código muito mais legível.\nSe você deseja se aprofundar mais no tópico, recomendo o livro Código limpo, que está sendo minha referência para este post.\nCódigo Limpo: https://amzn.to/3joqHkd\n","permalink":"https://teixeirazeus.github.io/blog/codigo-limpo-nomes/","summary":"Este é meu primeiro post, onde pretendo explorar um pouco sobre a questão do código limpo. Uma mistura da literatura da computação e minhas reflexões como programador.\nComunicação Vivi grande parte da minha vida em São Paulo capital, tenho o sotaque e até utilizo algumas gírias paulistas. Quando me empolgo, fico parecendo o Boça do Hermes e Renato. Puta minigame da hora, meu!.\nEstava na fase do vestibular e acabei passando no curso de ciência da computação na UTFPR de Ponta Grossa, Paraná.","title":"Código limpo: nomes"},{"content":"Intro In my video about How I cleared the AWS SAA Certification Exam, I shared my preparation strategy as well as tips to ace the exam. I also gave a glimpse of my revision notes that I prepared while taking the course and practice exams on Udemy. After that video was out, I got so many comments and DMs, requesting me to share my notes, but the problem was that I took these notes using a note-taking app called Obsidian which stores them in markdown format locally on my Mac. Once I\u0026rsquo;m done editing my notes, I push them to a GitHub repository to make sure I don\u0026rsquo;t lose them if my laptop breaks.\nSo, if you want to view my notes exactly like I do, you can clone my Obsidian Vault repository and download Obsidian to render it. But, this solution isn\u0026rsquo;t elegant as it would require you to download an additional software. So, I along with my college roommate, Sarthak Narayan, had been working over the past 2 weeks on the project, Obsidian Publish using GitHub Action, which would allow us to effortlessly publish our notes as a static website.\nIt is complete and I\u0026rsquo;ve used it to publish my notes at notes.arkalim.org. Working The GitHub Action spins up a Docker container which parses and converts Obsidian markdown notes into a special markdown format understood by MkDocs, an open-source static site generator. MkDocs is actually meant for preparing documentations but works well for notes too. After the markdown files have been converted, all the images in my notes are compressed to a fraction of their original size so that they can load quickly in your web browser. A static site is then built using MkDocs and then finally deployed on Netlify. All of this happens automatically using GitHub Actions. All I have to do is update my notes and push the changes to GitHub.\nFinal thoughts Having an automated way to publish your notes online with the community is a powerful way to share knowledge. This project has also made it exceedingly easy for me to refer my notes from anywhere, which is powerful when you work on a lot of systems.\nResources  My Notes Obsidian Publish - GitHub Action Parser and Image Compressor MkDocs - Material Theme  ","permalink":"https://teixeirazeus.github.io/projects/obsidian-publish-github-action/","summary":"Intro In my video about How I cleared the AWS SAA Certification Exam, I shared my preparation strategy as well as tips to ace the exam. I also gave a glimpse of my revision notes that I prepared while taking the course and practice exams on Udemy. After that video was out, I got so many comments and DMs, requesting me to share my notes, but the problem was that I took these notes using a note-taking app called Obsidian which stores them in markdown format locally on my Mac.","title":"Obsidian Publish using GitHub Action"},{"content":"🔗 GitHub Description I like reading personal improvement and mindset change type books on Kindle e-reader. Some of these books are downloaded straight from the internet and not from the Kindle store. I take highlights during my reading which I wanted to sync to my Notion workspace. There was no existing app that could do this job, so I developed my own.\nKindle exports the highlights as a file named MyClippings.txt. The NodeJS application reads the MyClipping.txt file exported by Kindle, parses it using Regex, extracts all the highlights, book names, highlight time etc and creates a JSON. It then uses Notion API to sync these highlights to a database in my Notion workspace. The app maintains a cache (JSON) containing the number of highlights synced for each book. This allows the highlights to be synced incrementally, preventing re-syncing of old highlights.\nAfter the app was received well by the open-source community and other developers contributed to improve the app, I dockerized it to make shipping the app easier. Now, the users don’t have to install any dependency. They can just use the docker run command with the path to their clippings file along with their Notion API key and database ID. This would sync their highlights to their Notion database.\nAs a part of automation, I implemented auto build and deployment of containers on push to the master branch using GitHub Actions. If a developer raises a pull request and I merge it to the master branch, the GitHub workflow automatically builds the app and deploys it to GitHub packages repository.\n","permalink":"https://teixeirazeus.github.io/projects/kindle-to-notion/","summary":"🔗 GitHub Description I like reading personal improvement and mindset change type books on Kindle e-reader. Some of these books are downloaded straight from the internet and not from the Kindle store. I take highlights during my reading which I wanted to sync to my Notion workspace. There was no existing app that could do this job, so I developed my own.\nKindle exports the highlights as a file named MyClippings.","title":"Kindle to Notion"},{"content":"🔗 Colab Notebook Description In this project, I implemented the paper Show, Attend and Tell: Neural Image Caption Generation with Visual Attention. The neural network, a combination of CNN and LSTM, was trained on the MS COCO dataset and it learns to generate captions from images.\nAs the network generates the caption, word by word, the model’s gaze (attention) shifts across the image. This allows it to focus on those parts of the image which is more relevant for the next word to be generated. Furthermore, beam search is used during inference to enhance the prediction result. The network was trained in PyTorch on an Nvidia GTX 1060 graphics card for over 80 epochs.\n","permalink":"https://teixeirazeus.github.io/projects/automated-image-captioning/","summary":"🔗 Colab Notebook Description In this project, I implemented the paper Show, Attend and Tell: Neural Image Caption Generation with Visual Attention. The neural network, a combination of CNN and LSTM, was trained on the MS COCO dataset and it learns to generate captions from images.\nAs the network generates the caption, word by word, the model’s gaze (attention) shifts across the image. This allows it to focus on those parts of the image which is more relevant for the next word to be generated.","title":"Automated Image Captioning (Bachelor Thesis)"},{"content":"🔗 View App 🔗 GitHub Description A to-do list web application built using React that allows the user to add, remove and edit their todos. Todo lists are stored in the browser local storage. I built this app while learning React.\n","permalink":"https://teixeirazeus.github.io/projects/todo-list-app/","summary":"🔗 View App 🔗 GitHub Description A to-do list web application built using React that allows the user to add, remove and edit their todos. Todo lists are stored in the browser local storage. I built this app while learning React.","title":"Todo List App"},{"content":"🔗 Colab Notebook 🔗 Blog Post Description In this project, I trained a neural network to localize key points on faces. Resnet-18 was used as the model with some slight modifications to the input and output layer. The model was trained on the official DLib Dataset containing 6666 images along with corresponding 68-point landmarks for each face. Additionally, I wrote a custom data preprocessing pipeline in PyTorch to increase variance in the input images to help the model generalize better. The neural network was trained for 30 epochs before it reached the optima.\nDuring inference, OpenCV Harr Cascades are used to detect faces in the input images. Detected faces are then cropped, resized to (224, 224), and fed to our trained neural network to predict landmarks in them. The predicted landmarks in the cropped faces are then overlayed on top of the original image.\n","permalink":"https://teixeirazeus.github.io/projects/face-landmarks-detection/","summary":"🔗 Colab Notebook 🔗 Blog Post Description In this project, I trained a neural network to localize key points on faces. Resnet-18 was used as the model with some slight modifications to the input and output layer. The model was trained on the official DLib Dataset containing 6666 images along with corresponding 68-point landmarks for each face. Additionally, I wrote a custom data preprocessing pipeline in PyTorch to increase variance in the input images to help the model generalize better.","title":"Face Landmarks Detection using CNN"},{"content":"Description The aim of the project was to build goggles which could find where the user was looking (gaze), the category of object the user was looking at, and the duration of attention on that object. The goggles had 3 camera modules, one on each eye to track the pupil movement and the third one for mapping the gaze to the real world. Thresholding was used to detect the pupils and contours were used to find its centre. Various important parameters such as pupil velocity, acceleration, and fixation time were calculated for further statistical analysis. Single Shot Descriptor, with VGG16 as backbone, was used to detect the objects the user was gazing at. Additionally, a GUI was made using TkInter for ease of use.\n","permalink":"https://teixeirazeus.github.io/projects/gaze-tracking-goggles/","summary":"Description The aim of the project was to build goggles which could find where the user was looking (gaze), the category of object the user was looking at, and the duration of attention on that object. The goggles had 3 camera modules, one on each eye to track the pupil movement and the third one for mapping the gaze to the real world. Thresholding was used to detect the pupils and contours were used to find its centre.","title":"Gaze-tracking Goggles"},{"content":"🔗 GitHub Description The aim of the project is to build an open-source quadcopter platform for research in the field of drone autonomy. Various deep learning and computer vision algorithms will be implemented on the drone including person tracking, gesture control using human pose estimation, optical flow stabilization, obstacle avoidance, and depth estimation using monocular vision. The drone uses a Pixhawk flight controller with Raspberry Pi as a companion computer. DJI Flame Wheel-450 is used for the quadcopter frame along with some custom mountings for adding additional components.\nRaspberry Pi runs a ROS node which communicates with another ROS node running on the host PC to transfer videos over Wi-Fi. To make the project open-source, easy to develop, and easily reproducible, the simulation environment setup has been dockerized using docker container. We are currently developing the algorithms and testing them in Gazebo Simulation.\n","permalink":"https://teixeirazeus.github.io/projects/openquad/","summary":"🔗 GitHub Description The aim of the project is to build an open-source quadcopter platform for research in the field of drone autonomy. Various deep learning and computer vision algorithms will be implemented on the drone including person tracking, gesture control using human pose estimation, optical flow stabilization, obstacle avoidance, and depth estimation using monocular vision. The drone uses a Pixhawk flight controller with Raspberry Pi as a companion computer. DJI Flame Wheel-450 is used for the quadcopter frame along with some custom mountings for adding additional components.","title":"OpenQuad"},{"content":" Presented in the 4th International and 19th National Conference on Machine and Mechanisms (iNaCoMM 2019)\n  Published in the Springer 2019\n 🔗 Publication Description Natural disasters like earthquakes and landslides are sudden events that cause widespread destruction and major collateral damage including loss of life. Though disasters can never be prevented, their effects on mankind can surely be reduced. In this paper, we present the design and control of SRR (Search and Reconnaissance Robot), a robot capable of traversing on all terrains and locating survivors stuck under the debris. This will assist the rescue team to focus on recovering the victims, leaving the locating task for the Robots. The unique features of the SRR above existing ATVs are active-articulation, modularity, and assisted-autonomy. Active-articulation allows the SRR to climb objects much tall than itself. Modularity allows the SRR to detach into smaller modules to enter tight spaces where the whole body can’t fit. Assisted-autonomy allows the SRR to detect the presence of objects in front and climb autonomously over them.\n","permalink":"https://teixeirazeus.github.io/projects/search-and-reconnaissance-robot/","summary":"Presented in the 4th International and 19th National Conference on Machine and Mechanisms (iNaCoMM 2019)\n  Published in the Springer 2019\n 🔗 Publication Description Natural disasters like earthquakes and landslides are sudden events that cause widespread destruction and major collateral damage including loss of life. Though disasters can never be prevented, their effects on mankind can surely be reduced. In this paper, we present the design and control of SRR (Search and Reconnaissance Robot), a robot capable of traversing on all terrains and locating survivors stuck under the debris.","title":"Search and Reconnaissance Robot"},{"content":"Description I worked on this project single-handedly during the summer break following my freshman year at NIT- Trichy. SEBART-Pro is a robot that follows a ball while balancing on two wheels. It can also recognize traffic signs and act accordingly. It has two stepper motors for precise position control and used an Arduino Nano as the microcontroller. The robot senses the tilt using an MPU-6050 (6-axis gyroscope and accelerometer) and converts the values from these sensors into angles using a Kalman Filter. It uses the PID control algorithm to balance on two wheels and a simple Convolutional Neural Network is used to recognize traffic signs.\n","permalink":"https://teixeirazeus.github.io/projects/sebart-pro/","summary":"Description I worked on this project single-handedly during the summer break following my freshman year at NIT- Trichy. SEBART-Pro is a robot that follows a ball while balancing on two wheels. It can also recognize traffic signs and act accordingly. It has two stepper motors for precise position control and used an Arduino Nano as the microcontroller. The robot senses the tilt using an MPU-6050 (6-axis gyroscope and accelerometer) and converts the values from these sensors into angles using a Kalman Filter.","title":"SEBART-Pro"},{"content":"Description  Integrated Rho product with GE Healthcare’s Edison platform which is expected to significantly increase the adoption of Rho among Canadian hospitals. GE Healthcare provided Amazon EKS to deploy Rho, which was originally designed to work on Docker-Compose. As a part of this integration, I wrote Kubernetes manifests to migrate Rho from Docker-Compose to Kubernetes. Automated integration testing of all the major backend workflows saving more than 2h of weekly testing time. Asynchronously decoupled individual micro-services using RabbitMQ and implemented dead letter queues (DLQs) for each queue to ensure retry of failed messages. Wrote Python scripts to automate installation and updation of Rho on customer site. Wrote bash scripts to automate the backup and restore functionality of Rho.  ","permalink":"https://teixeirazeus.github.io/experience/16bit/","summary":"Description  Integrated Rho product with GE Healthcare’s Edison platform which is expected to significantly increase the adoption of Rho among Canadian hospitals. GE Healthcare provided Amazon EKS to deploy Rho, which was originally designed to work on Docker-Compose. As a part of this integration, I wrote Kubernetes manifests to migrate Rho from Docker-Compose to Kubernetes. Automated integration testing of all the major backend workflows saving more than 2h of weekly testing time.","title":"DevOps Intern"},{"content":"Description  Developed an event-driven serverless integration framework using AWS services like AppFlow, S3, Lambda and EventBridge, to sync customer data between Salesforce and BuyerAssist. Through this, I learned to build systems to support bi-directional sync of large volumes of data from multiple sources, perform CRUD operations on MongoDB as well as database schema design. Developed a configuration-driven framework to extend the pattern matching capability of AWS EventBridge, which prevented thousands of false invocations of AWS Lambda functions. Implemented a system to track asynchronous data transfer jobs through AWS AppFlow, which reduced the issue tracking time to under 5 mins. Developed a Salesforce app using SFDX to provide clients with a customized experience within their Salesforce dashboard. Developed a Slack bot to send interactive daily notifications to customers, and to allow them to take actions directly from Slack. This eliminated the operational resistance and increased the adoption of our product by over 50%. Implemented authorization for Slack integration with BuyerAssist using React and OAuth 2.0 Mentored a new recruit for a period of 1 month  ","permalink":"https://teixeirazeus.github.io/experience/buyerassist/","summary":"Description  Developed an event-driven serverless integration framework using AWS services like AppFlow, S3, Lambda and EventBridge, to sync customer data between Salesforce and BuyerAssist. Through this, I learned to build systems to support bi-directional sync of large volumes of data from multiple sources, perform CRUD operations on MongoDB as well as database schema design. Developed a configuration-driven framework to extend the pattern matching capability of AWS EventBridge, which prevented thousands of false invocations of AWS Lambda functions.","title":"Backend Engineer"},{"content":"🔗 GitHub Description Guide: Mohammad Farid Azampour (Visiting Researcher at Chair for Computer Aided Medical Procedures, TU Munich)\nMy work focused on using Pix2Pix (a CGAN architecture) to generate Ultrasound (US) scans from MRI scans, an image-to-image translation problem. However, a major challenge that I faced was the lack of structural correspondence between the MRI and US scans, arising from the sheer nature of the way this data is collected. Consequently, I wrote a custom loss function incorporating the CGAN loss with a Dice Loss between the segmentation maps obtained from the MRI scans and those from the generated US scan. This forces the generator to remove the structural deformation in the generated US scans. Additionally, I was given remote access to the TU-Munich’s cluster computers for training the model as well as an account in their Discourse forum.\n","permalink":"https://teixeirazeus.github.io/experience/tumunich/","summary":"🔗 GitHub Description Guide: Mohammad Farid Azampour (Visiting Researcher at Chair for Computer Aided Medical Procedures, TU Munich)\nMy work focused on using Pix2Pix (a CGAN architecture) to generate Ultrasound (US) scans from MRI scans, an image-to-image translation problem. However, a major challenge that I faced was the lack of structural correspondence between the MRI and US scans, arising from the sheer nature of the way this data is collected. Consequently, I wrote a custom loss function incorporating the CGAN loss with a Dice Loss between the segmentation maps obtained from the MRI scans and those from the generated US scan.","title":"Remote Research Intern"},{"content":"Description Guide: Dr. Sripad Krishna Devalla (co-founder and CTO at OriginHealth)\nI worked as a remote intern at OriginHealth Pte. Ltd. (Singapore), where the company envisions to automate the detection of birth defects from fetal ultrasound scans, a procedure that demands expertise in radiology.\nHere, I developed a configuration-driven framework with data preprocessing pipeline to train deep learning models on AWS EC2 instances. The framework standardized the training procedure for ML models and saved more than 100 hours of development time for the ML team. I also worked on fetal head segmentation using this framework.\nThis opportunity provided me with a deeper insight into the applications of AI and Computer Vision in medical diagnosis and taught me to work with little and sensitive data. In addition, Confluence was used for documentation and Jira Software was used for Agile Software Development.\n","permalink":"https://teixeirazeus.github.io/experience/origin-health/","summary":"Description Guide: Dr. Sripad Krishna Devalla (co-founder and CTO at OriginHealth)\nI worked as a remote intern at OriginHealth Pte. Ltd. (Singapore), where the company envisions to automate the detection of birth defects from fetal ultrasound scans, a procedure that demands expertise in radiology.\nHere, I developed a configuration-driven framework with data preprocessing pipeline to train deep learning models on AWS EC2 instances. The framework standardized the training procedure for ML models and saved more than 100 hours of development time for the ML team.","title":"Software Intern"},{"content":"🔗 GitHub Description Guide: Prof. Dr. Pratyush Kumar (Assistant Professor, Dept. of Computer Science, IIT Madras)\nDuring my internship, I worked under the guidance of Prof. Pratyush Kumar (Assistant Professor, Department of Computer Science, IIT Madras) where I implemented a Convolutional Neural Network for 6-DoF Global Pose Regression and Odometry Estimation from consecutive monocular images. The model estimates the camera pose from a sequence of monocular images from the camera. At each step, the model takes two consecutive frames as input and returns the global and relative pose between the two frames. It was built and trained from scratch in Tensorflow and it outperformed traditional feature-based visual localization algorithms, especially in texture-less regions. The neural network was later used by Prof. Pratyush for the localization of robots in GPS denied environments.\n","permalink":"https://teixeirazeus.github.io/experience/iit-madras/","summary":"🔗 GitHub Description Guide: Prof. Dr. Pratyush Kumar (Assistant Professor, Dept. of Computer Science, IIT Madras)\nDuring my internship, I worked under the guidance of Prof. Pratyush Kumar (Assistant Professor, Department of Computer Science, IIT Madras) where I implemented a Convolutional Neural Network for 6-DoF Global Pose Regression and Odometry Estimation from consecutive monocular images. The model estimates the camera pose from a sequence of monocular images from the camera. At each step, the model takes two consecutive frames as input and returns the global and relative pose between the two frames.","title":"Computer Vision Intern"}]